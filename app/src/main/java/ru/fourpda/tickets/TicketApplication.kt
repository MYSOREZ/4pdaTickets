package ru.fourpda.tickets

import android.app.Application
import android.content.Intent
import android.os.Build
import android.util.Log

class TicketApplication : Application() {

    companion object {
        private const val TAG = "TicketApp"
        lateinit var instance: TicketApplication
            private set
    }

    override fun onCreate() {
        super.onCreate()
        instance = this
        Log.d(TAG, "üöÄ TicketApplication —Å–æ–∑–¥–∞–Ω–æ")

        // –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        // startMonitoringService()
    }

    private fun startMonitoringService() {
        try {
            val serviceIntent = Intent(this, ForegroundMonitorService::class.java).apply {
                action = ForegroundMonitorService.ACTION_START_MONITORING
            }

            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                startForegroundService(serviceIntent)
            } else {
                startService(serviceIntent)
            }

            Log.d(TAG, "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –∏–∑ Application")
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–∑ Application: ${e.message}")
        }
    }

    override fun onLowMemory() {
        super.onLowMemory()
        Log.w(TAG, "‚ö†Ô∏è –ú–∞–ª–æ –ø–∞–º—è—Ç–∏ - –Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è")
    }

    override fun onTrimMemory(level: Int) {
        super.onTrimMemory(level)
        Log.d(TAG, "üîÑ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏, —É—Ä–æ–≤–µ–Ω—å: $level")
    }
}
